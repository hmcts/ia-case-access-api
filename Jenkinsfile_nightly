#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 22 * * *')]),
  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'http://ia-case-access-api-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
    string(name: 'SecurityRules',
      defaultValue: 'http://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
      description: 'The URL you want to run these tests against'),
  ])
])

@Library("Infrastructure")

def type = "java"
def product = "ia"
def component = "case-access-api"

def secrets = [
  'ia-${env}': [

    secret('s2s-secret', 'IA_S2S_SECRET'),
    secret('s2s-microservice', 'IA_S2S_MICROSERVICE'),
    secret('s2s-url', 'S2S_URL'),
    secret('launch-darkly-sdk-key', 'LAUNCH_DARKLY_SDK_KEY'),
    secret('system-username', 'IA_SYSTEM_USERNAME'),
    secret('system-password', 'IA_SYSTEM_PASSWORD')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

withNightlyPipeline(type, product, component) {
  env.TEST_URL = params.URL_TO_TEST
  env.Rules = params.SecurityRules

  env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"

  enableAksStagingDeployment()
  disableLegacyDeployment()
  loadVaultSecrets(secrets)

  enableSecurityScan()
  enableMutationTest()

  enableSlackNotifications('#ia-tech')
}
