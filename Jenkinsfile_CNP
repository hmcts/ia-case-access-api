#!groovy
properties([
    [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/ia-case-access-api.git'],
    pipelineTriggers([[$class: 'GitHubPushTrigger']])
])


@Library("Infrastructure")

def type = "java"
def product = "ia"
def component = "case-access-api"

def secrets = [
    'ia-${env}': [
        secret('s2s-secret', 'IA_S2S_SECRET'),
        secret('s2s-microservice', 'IA_S2S_MICROSERVICE'),
        secret('idam-client-id', 'IA_IDAM_CLIENT_ID'),
        secret('idam-secret', 'IA_IDAM_SECRET'),
        secret('idam-redirect-uri', 'IA_IDAM_REDIRECT_URI'),
        secret('ia-system-access-username', 'IA_SYSTEM_ACCESS_USERNAME'),
        secret('ia-system-access-password', 'IA_SYSTEM_ACCESS_PASSWORD'),
        secret('test-law-firm-a-username', 'TEST_LAW_FIRM_SHARE_CASE_A_USERNAME'),
        secret('test-law-firm-a-password', 'TEST_LAW_FIRM_SHARE_CASE_A_PASSWORD'),
        secret('app-insights-connection-string', 'app-insights-connection-string')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

withPipeline(type, product, component) {

    env.CCD_URL = "http://ccd-data-store-api-aat.service.core-compute-aat.internal"
    env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
    env.DM_URL = "http://dm-store-aat.service.core-compute-aat.internal"
    env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
    env.CCD_GW_URL = "http://dm-store-aat.service.core-compute-aat.internal"

    loadVaultSecrets(secrets)
    enableAksStagingDeployment()
    disableLegacyDeployment()

    afterSuccess('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    afterSuccess('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    enableSlackNotifications('#ia-tech')
}
